<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="avatar.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAAGQAAP/hAzxodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4x
        NDU2NjEsIDIwMTIvMDIvMDYtMTQ6NTY6MjcgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4
        bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0
        dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9v
        bD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6
        NkQ3MDQ4MUJFNUQyMTFFM0FFMTg4MTRGMzk2MDUwQkMiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6
        NkQ3MDQ4MUNFNUQyMTFFM0FFMTg4MTRGMzk2MDUwQkMiPg0KCQkJPHhtcE1NOkRlcml2ZWRGcm9tIHN0
        UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NkQ3MDQ4MTlFNUQyMTFFM0FFMTg4MTRGMzk2MDUwQkMiIHN0
        UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NkQ3MDQ4MUFFNUQyMTFFM0FFMTg4MTRGMzk2MDUwQkMiLz4N
        CgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQg
        ZW5kPSd3Jz8+/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgIC
        AgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAMgAyAwERAAIRAQMRAf/EABwAAQACAwEBAQAA
        AAAAAAAAAAAHCAQGCQUCCv/EACQQAAEFAQEAAgMAAwEAAAAAAAQBAgMFBgcAEQgSExQhFhgJ/8QAGwEB
        AAIDAQEAAAAAAAAAAAAAAAQGAgMFAQf/xAAvEQACAgIBAwIFAwMFAAAAAAABAhEDAAQhMRIFQQZRYSIy
        E0JSFHEkB9EjNBUl/9oADAMBAAIRAxEAPwD9/HmMeYyuxv2d5ypVsPlq7f8AR4qOxKp7S05zg9DqKCC4
        AmcOfVDaGAWGktTa+dixkIHOQ0eVro5HNka5ic7e814Pxd/8Xye7ra+1AJR3+sAiR3KoYrI6BoMcxGZV
        VbN6fl16rLKv3AAKYMGCxAaD1KyPSZyI919m+oiQk6nDcsUTH08VcG+j6qJaY7oW+0ZxqzF1eCq4SiYA
        IKbOizkf0W0cEBhDVYx8UEMpKcS73z7bq36dKi07VThmttqkpQogAkMoNhJPKqRAgAlmC5JHjPJNrtsF
        BWAYVWiXb1A7WPaAIgweTyAo7st/i9ZU7zIZbb0Ej5aPX56n01RJJ+tJXVt5Xj2QX72xSSxsIQclqSNa
        5yNeip8r8fPrc6Gtyh6gxkJGDqHHQic2b2OZY8xjzGV/+yOit6nBAZyjPdRG9M1VXzkjVsIaNJjaK6Ct
        bHV6keV6sbGfV5WmN/kkV8bYC3xTOX8Y3NXm+Z8ofCeI2fLooe6iuUUiQbGZUSY9A7AkesR65klDbVqa
        yyA5IJHXtClmjryVUgfMjK0YVtp1KuDoOZdAzHE8ZSUQwGBoRanOazq9rm66vjjptCdi9NOouIw8wkgh
        IcEoRFtYBTNImmBWdrPUTwv+M9Za/wDsfd5uv8heS71q5RUL8n8lgBZ7ZksFhVaQe+DFhf3Bs2/2fhWS
        jWQfSxBJaOAQD+k8Ad0yvbASBOp7ev6gDdAF9HwOa/IeNtTWNj7Zhczidu8NkZFy3Oz7EiDS0TdR+qP9
        9QlYhBKOYGbatB/asmij/Gm9QX1/H7mv/FYswsZLPyL+wMiKQzL6MXKoZdKy8R7s+f8AyqH3aX/lggES
        vawBMwSwIkcfb9XQt2zk8fWvUuiv5sfQz2RHNNFi5OhYqpv4f4b/AJvZhaifN7fnhAUrFMjqwbkiN440
        z5H1RDChWSSCoL+uze0PJ+U2NfZ8N55f/Y8ZatLMI+tCp/GSRwxAXh4+tCrHmSePv066XLs6X/B2FZlB
        /SwI7hHoJbp0BBgL9q3L9bsh48xjzGc4/wD1EnH/AObQwV0eizBRPScaQ+0yR5VfehZsKYxdwe8gEcok
        XNj4+cyO3JVrYBgJpHSvY34X2yqk32pWaa76fyJ3K4DLAdT3Qf1KQHXqe5RAORttwlJPe9bwYKmD0M9P
        QiQ3yJ5GRb0TncPG6/pu9pO49DFFdl8MN9Y5aLsOp2G56Dv9O2Qemz9zV60S0yu3zVzoHUotdADIXEtM
        hDjFjZG2RnSrtOw6o6KWljZKgAAdTI5B6kk+vTMbtW3V1/5Yc/iaBVDdxLfAg/A9oA5kT6c55o+T6J0x
        22yvWOyRS/ZrnvX82Ls89W7Tc8w5TX8gvFoyBdJyXnuesdJYiC22FJneAUeQfI/RQzMsi2sjbDGL1UhW
        pT+1ZDBgM3cJ4YmPXrAH09Bnuvr7W+71Fwd1WBb6io7OJKiT+mYkk93BPw9z6eCZ/P8A3I+x+ezXUOgd
        Ky8FfMLnrLda6x29fFajB8zO2wGX1BorR7SxH0VhKtyyIomSKVIUejfx+Xc2+iwbTbZ16qlspqBdVCtY
        ym0f7kGT2J2BJAhTAJ9PKGRXNK2vYFZoDEkLIQkLPxae7nqJgZ1k9ryXjzGPMZW/7G8e0HT6ESyxlsEB
        sc1U6YCurbkP+ui0tboW05htGbJGXXl1JsttmK6YU5kzooXwuZPDPBLIz0nXuWtocfQSOR1ETz8+p4zV
        YLPvqI7+1lg9CGiR8ugg+mRkDgeHbDlh2r5txHNmwbME4G4p886m59sc9JOdIzZU4F+a6u/03TY7RCyf
        0BwkVqMPFV35Mc1qr6bNivY7LXPHSZIPwPrII+R4zfXVrWaYu10l/WIDKZ9IiCT84kdZ5zK5rzznugoD
        CdZyw+4p2TkaWPofebrCdD1upsCoYxLS0fZVdhowq3Og1FQNHHIwkYOQeJEQdEa57sb7bVYCt4fp2pIA
        +HoDMk/65t16q7g1uyvdWI+pu34RAAlYgAACOIgR1+OCc7F1euk7eDBVZzmYtteR8JxdBnVzo78oubos
        IFuDW/IcUFVoaqiJIpq4cEWBleewmR00kkaQbb7OxPwGTaQO8kzzJMf1EwTPURkCtjdDgBddSSgA+ICz
        /QxwPQHLrehZIx5jHmMxjDA64MqwsChgQARpzDjjJ4hQwwxYnTklFEzuZCOMPCxz3ve5GsaiqqoieAEm
        B1wTHJ6ZxW2PbNboN/fdE5qTd8pz++huR6/9OHricF0Gqzmnz9PcazplJroZl3FyfzSUu0gsaeCtHrqu
        KGIg2wjb8xX6v25TX4k27Xe+6KTYBJUoYYhAIkkxPPBhu0AiT8+f3Ns2+bGtpGpNE3rWx+/uBIBsJHC8
        9I5j7iRxmV13X7vOayfAgaozrvN8nomA0POM7haKfmujqcxgANfrKfoVbhms1mjEpb+1rhGMCJIHq5SW
        SnVh0TXQu0+H8NpeQ8cNpmavesdgGBmBwFbtPJBaVkck/aQQZkee9wb/AI7yn8QBH0K0QsjDtJLE/T3D
        gEKO4KYB47gQRnXLnO3oOj4fMbXMzDy09/UCGwwjzRTLWzrE1htKWkSNQexpDWSCEwuaySCeF8b2tc1W
        pTLqrKLmptBFqsQQQQZHyMHLpTbXfSt1RBqdQQQQeD/SRm7e1Ztx5jHmMg/7JVNpe8M6TUU1FZaewsKD
        +ePP1EKE2NvC84NTQRRVlgQx0wSSI6FXIkzfln+fy+Fn+LemryVFt5ApW1SxPQAEEnIHla7rfGbFWuCb
        2pcKBwSSpAGU9MqrC5OMh0HIevWIUjbOOKaLEWoZoUlmAXVKfV2Qh8BYUza06aF/6JWOdBK+NUVrlb76
        xs+e8DfQqDaq7ksRhIsiVM9Qs8/HrnyLV9ve4NZmI1X+qp04KfqWOZaCB8MjXkHOdXjee5utP492qXZR
        SWhNxZ21MLaSAMOnYi1VO+bQDg09eRGANLNFXwxRESsa+X85Gqvout7i8LTeb7dhSTWEHDkgBi37YA56
        D4SROS7/AG75+6n+OmsQgtL/AHIAZRV/dJMg8n0OXm+seZ0Gfz3Qi9BnbfMTarqFxpQa68iDGspwp83k
        6yS1KEBPsYx57OyqyJH/AJyJLI75keny/wCVoPuXc1N/yp2NEg65rQcAgSBB4IHToOOmX/2to7fjvELq
        7q9l4scxIPBMjkEjLLe4GWLHmMeYx5jHmMeYx5jHmMeYz//Z
</value>
  </data>
</root>